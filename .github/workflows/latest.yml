name: "1. Build latest images & Pull Release"

on:
  workflow_dispatch:
  schedule:
    - cron: 0 */12 * * *

jobs:
  release:
    runs-on: ubuntu-latest
    name: "Build image & Pull Release"
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKERHUB_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check the latest verion
        run: |
          [ -e README.md ] && NOW=$(awk '/^ - ### \*\*latest\*\*:/{print $NF}' README.md)
          LATEST=$(wget -qO- "https://api.github.com/repos/SagerNet/sing-box/releases/latest" | awk -F '"' '/tag_name/{print $4}')
          echo " NOW: $NOW"
          echo " LATEST: $LATEST"
          if [ "$NOW" != "$LATEST" ]; then
            sed -i "/^ - ### \*\*latest\*\*:/s/\(.*: \).*/\1$LATEST/" README.md
            echo "VERSION=$LATEST" >> $GITHUB_ENV
          fi

      - name: Login to DockerHub
        if: ${{ env.VERSION != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Set up QEMU
        if: ${{ env.VERSION != '' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ env.VERSION != '' }}
        uses: docker/setup-buildx-action@v3

      - name: Push images to Docker hub
        if: ${{ env.VERSION != '' }}
        uses: docker/build-push-action@v5
        with:
          push: true
          file: main/Dockerfile
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          tags: |
            ${{ env.DOCKERHUB_REPOSITORY }}:latest
            ${{ env.DOCKERHUB_REPOSITORY }}:${{ env.VERSION }}

      - name: Extract branch name
        run: |
          export TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: xgo build
        if: ${{ env.VERSION != '' }}
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: latest
          dest: dist
          pkg: cmd/dashboard
          prefix: sing-box
          targets: linux/amd64,linux/arm64,linux/arm-7
          v: true
          x: false
          race: false
          tags: with_quic,with_grpc,with_dhcp,with_wireguard,with_ech,with_utls,with_reality_server,with_acme,with_clash_api,with_v2ray_api,with_gvisor
          ldflags: -s -w --extldflags '-static -fpic' -X github.com/SagerNet/sing-box/constant.Version=${{ steps.extract_branch.outputs.tag }}
          buildmode: default

      - name: fix dist
        if: ${{ env.VERSION != '' }}
        run: |
          mv dist/dashboard-linux-arm-7 dist/dashboard-linux-arm

      - name: Compress dist files
        if: ${{ env.VERSION != '' }}
        run: |
          for file in dist/*; do
            if [ -f "$file" ]; then
              zip -r "$file.zip" "$file"
            fi
          done

      - name: Release
        if: ${{ env.VERSION != '' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.zip"
          generateReleaseNotes: true

      # - name: Purge jsdelivr cache
      #   run: |
      #     curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/install.sh
      #     curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/nezha-agent.service
      #     curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/docker-compose.yaml
      #     curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/config.yaml
      #     LOWER_USERNAME=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
      #     curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/install.sh
      #     curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/nezha-agent.service
      #     curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/docker-compose.yaml
      #     curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/config.yaml
